<header class="header">
  <h1>Approach</h1>
</header>
<article class="main">
  <h1>Modularity</h1>
  <div class="article-content">
    <p>Most of progressive CSS approaches are built around modularity, which is pretty common nowadays. Every web interface consists of components (interface elements) and it should be built witch CSS using same principal. Having your interface sliced into independent re-usable components gives you ability to avoid writing redundant code, keep consistancy of interface and makes it a lot easier to change interface.</p>
    <p>Upcomming web components technologies follow the principle of incapsulation all the logic behaviour and look of a component so that you can modify it only via external API. Right now web components donâ€™t yet ship in all browsers but we can do same approach with CSS.</p>
    <h3>Application Layers</h3>
    <p>Before we can start implement independent interface elements, there are couple of things we need to take care about. There are some basic setup, our components will depend on (yes, components aren't really fully independent). This base styles are divided into  two layers: Base layer (including resets, helpers and grids) and typography layer (globally defined styles for text elements).</p>
    <p>- <strong>Base layer</strong> does reset of inconsistent default browser styling. There are two most popular techniques for this: reset.css and normalize.css - you can use one you prefer most. ApplePie Toolkit includes some kind of merge of this two solutions. Also base layer adds different kinds of helpers you might need, like grids, responsive helpers, spasings helpers etc. Most of them have become almost standartized among developers from all over the world.</p>
    <p>- <strong>Typography layer</strong> defines basic text styles for all <strong>needed</strong> text elements like headings, paragraphs, link styles etc. Of course you wouldn't  want to include nd repeat all that styling to each element individualy, because they are project wide and you'd like to have ability to change it in one place. A nice starting typography module is included to Apple Pie Toolkit which you can use as is or modify by your needs.</p>
    <p>- Third layer is a <strong>components layer</strong></p>
  </div>
</article>