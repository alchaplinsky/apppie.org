<%= render_partial "subnavigation" %>
<header class="header">
  <h1>Toolkit</h1>
</header>
<article class="main">
  <h1>Grid and Helpers</h1>
  <div class="article-content">
    <h2>Grid</h2>
    <p>ApplePie Grid is easy to work with and very powerfull tool for building complex flexible and responsive layouts. This grid 6-column nestable grid which is really simple because it is  based on proportions rather than columns count. It is similar to <a href="https://github.com/stubbornella/oocss/wiki/Grids">OOCSS Grid</a> with extra features and more consistent naming.</p>
<ul>
  <li>Minimalistic and simple grid based on proportions (allows you not to count collumns but divide page into half, thirds, fourth, etc.)</li>
  <li>It is fluid and doesn't use fixed width for columns, so can scale to an arbitrary size (defined by the max width of the row)</li>
  <li>Infinite nesting and stacking</li>
  <li>It uses "box-sizing: border-box," so that borders and padding do not affect the overall width of the columns</li>
</ul>
    <h2>Helpers</h2>
    <p>
      Helpers is scope that provides some global tools that developers use to define simple element behavior which cannot be treated as element-specific. According to tendency to code elements location independent, these rules cannot be included within element (object or module) style rules.
    </p>
    <p>
      So considering written above, we separated them as isolated classes which can be added to any element to bring needed effect. They can be appraised as a global modifier classes.
    </p>
    <p>
      Obviously, each developer has own helpers or something that makes life easier. So feel free to add anything you feel considerable to <code class="inline">helpers.sass</code>
    </p>
    <pre><code lang="scss" class="scss">
      .right {
          float: right;
        }

        .left {
          float: left;
        }

        .center {
          margin-left: auto;
          margin-right: auto;
        }

        .relative {
          position: relative;
        }

        .hidden {
          display: none;
        }

        .by-left {
          text-align: left;
        }

        .by-right {
          text-align: right;
        }

        .by-center {
          text-align: center;
        }

        .fittogrid {
          max-width: 100%;
        }
      </code></pre>
  </div> <!-- /article-content -->
</article>
